[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pneumonia-detection"
version = "1.0.0"
description = "Deep learning-based pneumonia detection from chest X-rays"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "Onur Ünal", email = "onur.unal492@gmail.com"}
]
maintainers = [
    {name = "Onur Ünal", email = "onur.unal492@gmail.com"}
]
keywords = ["pneumonia", "detection", "deep-learning", "medical-imaging", "xray"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.3.0,<3.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "tensorflow>=2.10.0,<3.0.0",
    "pydicom>=2.3.0,<3.0.0",
    "opencv-python>=4.6.0,<5.0.0",
    "scikit-image>=0.19.0,<1.0.0",
    "albumentations>=1.3.0,<2.0.0",
    "Pillow>=9.0.0,<11.0.0",
    "matplotlib>=3.5.0,<4.0.0",
    "seaborn>=0.11.0,<1.0.0",
    "tqdm>=4.64.0,<5.0.0",
    "pyyaml>=6.0,<7.0",
    "python-dotenv>=0.20.0,<2.0.0",
    "click>=8.0.0,<9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.990",
    "isort>=5.11.0",
    "pre-commit>=3.0.0",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.20.0",
]
api = [
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.21.0",
    "python-multipart>=0.0.6",
    "pydantic>=1.10.0",
]
viz = [
    "plotly>=5.0.0",
    "gradio>=3.0.0",
    "streamlit>=1.20.0",
]
mlops = [
    "wandb>=0.13.0",
    "mlflow>=2.0.0",
    "tensorboard>=2.10.0",
]
all = [
    "pneumonia-detection[dev,api,viz,mlops]",
]

[project.urls]
Homepage = "https://github.com/onurunaall/pneumonia-detection"
Documentation = "https://pneumonia-detection.readthedocs.io"
Repository = "https://github.com/onurunaall/pneumonia-detection"
"Bug Tracker" = "https://github.com/onurunaall/pneumonia-detection/issues"

[project.scripts]
pneumonia-train = "scripts.train:main"
pneumonia-predict = "scripts.predict:main"
pneumonia-evaluate = "scripts.evaluate:main"

[tool.setuptools]
packages = ["config", "data", "models", "training", "evaluation", "inference"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | logs
  | checkpoints
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/data/*", "*/logs/*", "*/checkpoints/*"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "silent"
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["config", "data", "models", "training", "evaluation", "inference"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]