[metadata]
name = pneumonia-detection
version = 1.0.0
description = Deep learning-based pneumonia detection from chest X-rays
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Healthcare Industry
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Medical Science Apps.

[options]
packages = find:
python_requires = >=3.9
install_requires = 
    numpy>=1.21.0,<2.0.0
    pandas>=1.3.0,<3.0.0
    scikit-learn>=1.0.0,<2.0.0
    tensorflow>=2.10.0,<3.0.0
    pydicom>=2.3.0,<3.0.0
    opencv-python>=4.6.0,<5.0.0
    scikit-image>=0.19.0,<1.0.0
    albumentations>=1.3.0,<2.0.0
    Pillow>=9.0.0,<11.0.0
    matplotlib>=3.5.0,<4.0.0
    seaborn>=0.11.0,<1.0.0
    tqdm>=4.64.0,<5.0.0
    pyyaml>=6.0,<7.0
    python-dotenv>=0.20.0,<2.0.0
include_package_data = True
zip_safe = False

[options.packages.find]
exclude =
    tests
    tests.*
    notebooks
    docs

[options.extras_require]
dev =
    pytest>=7.2.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    black>=22.0.0
    flake8>=5.0.0
    mypy>=0.990
    isort>=5.11.0
    pre-commit>=3.0.0
    ipython>=8.0.0
    jupyter>=1.0.0
api =
    fastapi>=0.95.0
    uvicorn[standard]>=0.21.0
    python-multipart>=0.0.6
viz =
    plotly>=5.0.0
    gradio>=3.0.0
mlops =
    wandb>=0.13.0
    mlflow>=2.0.0
    tensorboard>=2.10.0
all =
    pneumonia-detection[dev,api,viz,mlops]

[options.entry_points]
console_scripts =
    pneumonia-train = scripts.train:main
    pneumonia-predict = scripts.predict:main
    pneumonia-evaluate = scripts.evaluate:main

[options.package_data]
* = *.yaml, *.yml, *.json

[flake8]
max-line-length = 100
exclude = 
    .git,
    __pycache__,
    .venv,
    venv,
    env,
    build,
    dist,
    .eggs,
    *.egg-info,
    data,
    logs,
    checkpoints,
    notebooks
ignore = 
    E203,
    E501,
    W503,
    E402,
per-file-ignores =
    __init__.py:F401

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
check_untyped_defs = True
ignore_missing_imports = True

[mypy-tests.*]
ignore_errors = True

[coverage:run]
source = 
    config
    data
    models
    training
    evaluation
    inference
    utils
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    setup.py

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = 
    -ra
    -q
    --strict-markers
    --cov=.
    --cov-report=term-missing
    --cov-report=html
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    unit: marks tests as unit tests

[bdist_wheel]
universal = 0

[egg_info]
tag_build = 
tag_date = 0
